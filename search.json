[{"path":[]},{"path":"https://ghar1821.github.io/TrackSOM/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://ghar1821.github.io/TrackSOM/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement putri.g@wehi.edu.au. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://ghar1821.github.io/TrackSOM/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to TrackSOM","title":"Contributing to TrackSOM","text":"outlines propose change TrackSOM. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to TrackSOM","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to TrackSOM","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://ghar1821.github.io/TrackSOM/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to TrackSOM","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"ghar1821/TrackSOM\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to TrackSOM","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to TrackSOM","text":"Please note TrackSOM project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/articles/TrackSOM-workflow.html","id":"importing-tracksom-package","dir":"Articles","previous_headings":"","what":"Importing TrackSOM package","title":"TrackSOM-workflow","text":"installed TrackSOM package, please use devtools install package following TrackSOM github repo. devtools, repo parameter : ghar1821/TrackSOM.","code":"library(data.table) library(TrackSOM)"},{"path":"https://ghar1821.github.io/TrackSOM/articles/TrackSOM-workflow.html","id":"importing-dataset","dir":"Articles","previous_headings":"","what":"Importing dataset","title":"TrackSOM-workflow","text":"TrackSOM supports dataset stored either CSV FCS files data.table object (enhanced version R’s native data.frame. See data.table vignette details). following sections shall show read files pass TrackSOM function.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/articles/TrackSOM-workflow.html","id":"dataset-as-csv-files","dir":"Articles","previous_headings":"Importing dataset","what":"Dataset as CSV files","title":"TrackSOM-workflow","text":", assume file contains data belonging one time-point. Hence 1 CSV files. case, please reformat data files. import dataset stored CSV files, TrackSOM needs know files stored. files’ location must stored within vector get passed TrackSOM function. Important: vector must organised first element data first time-point, 2nd element 2nd time-point, . First, start specifying CSV files . example, dataset files already stored within package, need load : dataset, please replace content vector absolute path dataset files! Let’s inspect content data.files.fullpath: can see contains list absolute path multiple CSV files, belonging time-point.","code":"data.files.fullpath <- c(   system.file(\"extdata\", \"synthetic_d0.csv\", package = \"TrackSOM\"),   system.file(\"extdata\", \"synthetic_d1.csv\", package = \"TrackSOM\"),   system.file(\"extdata\", \"synthetic_d2.csv\", package = \"TrackSOM\"),   system.file(\"extdata\", \"synthetic_d3.csv\", package = \"TrackSOM\"),   system.file(\"extdata\", \"synthetic_d4.csv\", package = \"TrackSOM\") ) print(data.files.fullpath) ## [1] \"/home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d0.csv\" ## [2] \"/home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d1.csv\" ## [3] \"/home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d2.csv\" ## [4] \"/home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d3.csv\" ## [5] \"/home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d4.csv\""},{"path":"https://ghar1821.github.io/TrackSOM/articles/TrackSOM-workflow.html","id":"dataset-as-fcs-files","dir":"Articles","previous_headings":"Importing dataset","what":"Dataset as FCS files","title":"TrackSOM-workflow","text":"procedure similar reading CSV files , except ’re going storing FCS files’ path rather CSV. , , assume file contains data belonging one time-point. Hence 1 FCS files. case, please reformat data files. import dataset stored FCS files, TrackSOM needs know files stored. files’ location must stored within vector get passed TrackSOM function. Important: vector must organised first element data first time-point, 2nd element 2nd time-point, . First, start specifying FCS files . example, dataset files already stored within package, need load : dataset, please replace content vector absolute path dataset files! Let’s inspect content data.files.fullpath.fcs: can see contains list absolute path multiple FCS files, belonging time-point.","code":"data.files.fullpath.fcs <- c(   system.file(\"extdata\", \"synthetic_d0.fcs\", package = \"TrackSOM\"),   system.file(\"extdata\", \"synthetic_d1.fcs\", package = \"TrackSOM\"),   system.file(\"extdata\", \"synthetic_d2.fcs\", package = \"TrackSOM\"),   system.file(\"extdata\", \"synthetic_d3.fcs\", package = \"TrackSOM\"),   system.file(\"extdata\", \"synthetic_d4.fcs\", package = \"TrackSOM\") ) print(data.files.fullpath.fcs) ## [1] \"/home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d0.fcs\" ## [2] \"/home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d1.fcs\" ## [3] \"/home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d2.fcs\" ## [4] \"/home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d3.fcs\" ## [5] \"/home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d4.fcs\""},{"path":"https://ghar1821.github.io/TrackSOM/articles/TrackSOM-workflow.html","id":"dataset-as-a-list-of-data-table-objects","dir":"Articles","previous_headings":"Importing dataset","what":"Dataset as a list of data.table objects","title":"TrackSOM-workflow","text":"Sometimes, convenient dataset stored data.table object files, e.g. need run code preprocess data using R. example, supposed synthetic dataset CSV files already read data.table object prior running TrackSOM (say preliminary clean filtering). need organise list element data.table object dataset time-point. Important: list must organised first element data first time-point, 2nd element 2nd time-point, . can see, 5 elements list, containing dataset belonging time-point.","code":"dat <- lapply(data.files.fullpath, function(f) fread(f)) dat ## [[1]] ##               x         y         z timepoint ##           <num>     <num>     <num>    <char> ##    1:  9.598217 11.728198 11.382064      Mock ##    2:  8.937549  8.653750 11.107314      Mock ##    3:  9.632932  9.657278  9.115804      Mock ##    4:  9.770393 12.478038 11.451082      Mock ##    5: 30.426699 31.290929 28.901204      Mock ##   ---                                         ## 7096: 10.533174  9.462175  9.867354      Mock ## 7097: 10.544833 10.426697  9.571881      Mock ## 7098: 10.140938  8.727880 10.247086      Mock ## 7099: 30.967131 30.261241 30.469085      Mock ## 7100: 10.063984 10.289172 10.382876      Mock ##  ## [[2]] ##               x         y         z timepoint ##           <num>     <num>     <num>    <char> ##    1: 33.850857 30.653891 29.257884     SYN-1 ##    2: 10.429818 13.880273 10.878985     SYN-1 ##    3: 10.009247 10.327127 10.994237     SYN-1 ##    4:  9.751578  8.555277  8.914872     SYN-1 ##    5: 10.456213 10.972776 10.011441     SYN-1 ##   ---                                         ## 7096:  9.237145 10.203747 12.475563     SYN-1 ## 7097: 12.957000  9.147637  8.807634     SYN-1 ## 7098: 12.297580 11.034141  9.828642     SYN-1 ## 7099:  9.393480 11.766797 11.137156     SYN-1 ## 7100: 11.684874  8.864774 11.771160     SYN-1 ##  ## [[3]] ##               x         y         z timepoint ##           <num>     <num>     <num>    <char> ##    1: 10.107081 10.371958  8.862552     SYN-2 ##    2: 12.271113 28.710774 13.945666     SYN-2 ##    3: 10.248482 10.249500  7.918076     SYN-2 ##    4:  9.341533 10.228882 12.209994     SYN-2 ##    5: 10.116334  9.805188  9.742291     SYN-2 ##   ---                                         ## 7196: 10.682697 13.643521 10.637965     SYN-2 ## 7197: 27.598520 30.275747 29.691414     SYN-2 ## 7198: 10.728449 10.020652  9.517445     SYN-2 ## 7199: 10.167862  9.754739  9.416342     SYN-2 ## 7200:  9.554067 11.296156 12.535182     SYN-2 ##  ## [[4]] ##               x         y         z timepoint ##           <num>     <num>     <num>    <char> ##    1: 13.864150  8.884197  8.742413     SYN-3 ##    2: 25.420014 40.961726 26.453685     SYN-3 ##    3: 23.968729 31.313815 31.314857     SYN-3 ##    4: 10.538730  9.855319  9.061674     SYN-3 ##    5:  8.814686 12.068781 10.729973     SYN-3 ##   ---                                         ## 7196: 10.358157  8.856995 10.440222     SYN-3 ## 7197: 10.093926 11.400187 10.429873     SYN-3 ## 7198: 14.720125 10.599644  9.599185     SYN-3 ## 7199: 24.545254 29.734070 29.035897     SYN-3 ## 7200:  9.967504 14.351193 11.619231     SYN-3 ##  ## [[5]] ##               x         y         z timepoint ##           <num>     <num>     <num>    <char> ##    1: 10.088854 10.171541 10.122280     SYN-4 ##    2: 14.776449 10.189092 10.621575     SYN-4 ##    3:  9.652116 12.567544  9.282672     SYN-4 ##    4: 10.436809 10.725664 10.016877     SYN-4 ##    5: 10.235657 10.966951  9.371363     SYN-4 ##   ---                                         ## 7096: 21.234807 30.522073 30.590687     SYN-4 ## 7097:  9.703690  8.319128  9.579323     SYN-4 ## 7098: 17.654003 30.891041 29.390515     SYN-4 ## 7099:  9.089960  9.744563 12.483508     SYN-4 ## 7100: 36.910728 29.551236 29.926378     SYN-4"},{"path":"https://ghar1821.github.io/TrackSOM/articles/TrackSOM-workflow.html","id":"dataset-as-a-data-table-object","dir":"Articles","previous_headings":"Importing dataset > Dataset as a list of data.table objects","what":"Dataset as a data.table object","title":"TrackSOM-workflow","text":"can also represent dataset just one data.table object containing column denoting time-point cell comes . , timepoint column denotes timepoint cell comes .","code":"timepoints <- seq(0, 4)  dat <- lapply(seq(length(data.files.fullpath)), function(data_file_i) {     dt <- fread(data.files.fullpath[[data_file_i]])     dt[['timepoint']] <- timepoints[data_file_i]     return(dt) })  dat <- rbindlist(dat)  head(dat) ##            x         y         z timepoint ##        <num>     <num>     <num>     <int> ## 1:  9.598217 11.728198 11.382064         0 ## 2:  8.937549  8.653750 11.107314         0 ## 3:  9.632932  9.657278  9.115804         0 ## 4:  9.770393 12.478038 11.451082         0 ## 5: 30.426699 31.290929 28.901204         0 ## 6: 30.789497 30.069909 30.767145         0 tail(dat) ##            x         y         z timepoint ##        <num>     <num>     <num>     <int> ## 1:  7.954781  9.241713  9.429919         4 ## 2: 21.234807 30.522073 30.590687         4 ## 3:  9.703690  8.319128  9.579323         4 ## 4: 17.654003 30.891041 29.390515         4 ## 5:  9.089960  9.744563 12.483508         4 ## 6: 36.910728 29.551236 29.926378         4"},{"path":"https://ghar1821.github.io/TrackSOM/articles/TrackSOM-workflow.html","id":"running-tracksom","dir":"Articles","previous_headings":"","what":"Running TrackSOM","title":"TrackSOM-workflow","text":"Depending dataset stored, parameter inputFiles either: vector absolute path CSV FCS files list data.table object. data.table object inputFiles option 3 , make sure specify following parameters: timepointCol: name column denoting timepoint cells. timepoints: vector timepoints order. Make sure values exist timepointCol column.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/articles/TrackSOM-workflow.html","id":"other-parameters","dir":"Articles","previous_headings":"Running TrackSOM","what":"Other parameters","title":"TrackSOM-workflow","text":"Note: examples assume datasets stored CSV files. TrackSOM function various parameters. , inputFiles colsToUse default values. inputFiles parameter explained previous section. colsToUse parameter specify columns dataset used clustering tracking. must vector. synthetic dataset, columns denoted x, y, z. cytometry data, vector markers. TrackSOM functions following parameters pre-filled default values: tracking: TRUE (default) FALSE, whether perform tracking. noMerge: TRUE FALSE (default), whether allow merging meta-clusters (FALSE) (TRUE). noMerge set TRUE, meta-clusters allowed split, merge. maxMeta: NULL (default) round number. Maximum number meta clusters time point. used Autonomous Adaptive operation. nClus: NULL (default) numeric vector numbers. single number, TrackSOM run Prescribed Invariant operation. Otherwise, run Prescribed Variant operation. seed: 42 (default). Random seed number. xdim: 10 (default). SOM grid size. ydim: 10 (default). SOM grid size. function also accept parameters built FlowSOM ReadInput, BuildSOM BuildMST functions. See FlowSOM’s vignette specific parameter information. Let’s run TrackSOM following settings: merging meta-clusters allowed (noMerge = TRUE) Enable tracking (tracking = TRUE) Prescribed Variant producing 3, 3, 9, 7, 15 meta-clusters time-point. remaining parameters set default values.","code":"tracksom.result <- TrackSOM(inputFiles = data.files.fullpath,                             colsToUse = c('x', 'y', 'z'),                             tracking = TRUE,                             noMerge = TRUE,                             nClus = c(3,3,9,7,15),                             dataFileType = \".csv\" ) ## Building SOM ## Mapping data to SOM ## Building MST ## Extracting SOM nodes for each time point ## Running meta clustering ## Meta clustering time point 1 with 82 SOM nodes ## Meta clustering time point 2 with 93 SOM nodes ## Meta clustering time point 3 with 90 SOM nodes ## Meta clustering time point 4 with 95 SOM nodes ## Meta clustering time point 5 with 95 SOM nodes"},{"path":"https://ghar1821.github.io/TrackSOM/articles/TrackSOM-workflow.html","id":"extracting-meta-clusters-id-and-som-nodes","dir":"Articles","previous_headings":"","what":"Extracting meta-clusters ID and SOM nodes","title":"TrackSOM-workflow","text":"TrackSOM result stored object. facilitate extraction meta-clusters ID SOM nodes cell, provide following functions: ConcatenateClusteringDetails: assuming dataset stored data.table object, function attaches meta-cluster ID SOM nodes separate columns. ExportClusteringDetailsOnly: function simply extract meta-cluster ID SOM nodes cell data.table object. cells ordered based ordering dataset. use ConcatenateClusteringDetails, need first read datasets one giant data.table. Double check data read properly: run ConcatenateClusteringDetails, need pass following parameters: timepoint.col: column data define time-point. timepoints: time-points (order). must vector. Now let’s attach meta-cluster ID SOM nodes: Inspect content: function attaches extra 3 columns: TrackSOM_cluster: SOM node cell. TrackSOM_metacluster: meta-cluster assignment produced FlowSOM’s meta-clustering. TrackSOM_metacluster_lineage_tracking: tracking meta-clusters’ evolution produced TrackSOM. gives changes undergone meta-clusters time. function gives back data.table object can export CSV file using data.table’s fwrite function.","code":"data.files <- c(   system.file(\"extdata\", \"synthetic_d0.csv\", package = \"TrackSOM\"),   system.file(\"extdata\", \"synthetic_d1.csv\", package = \"TrackSOM\"),   system.file(\"extdata\", \"synthetic_d2.csv\", package = \"TrackSOM\"),   system.file(\"extdata\", \"synthetic_d3.csv\", package = \"TrackSOM\"),   system.file(\"extdata\", \"synthetic_d4.csv\", package = \"TrackSOM\") ) dat <- lapply(data.files, function(f) fread(f)) dat <- rbindlist(dat) head(dat) ##            x         y         z timepoint ##        <num>     <num>     <num>    <char> ## 1:  9.598217 11.728198 11.382064      Mock ## 2:  8.937549  8.653750 11.107314      Mock ## 3:  9.632932  9.657278  9.115804      Mock ## 4:  9.770393 12.478038 11.451082      Mock ## 5: 30.426699 31.290929 28.901204      Mock ## 6: 30.789497 30.069909 30.767145      Mock tail(dat) ##            x         y         z timepoint ##        <num>     <num>     <num>    <char> ## 1:  7.954781  9.241713  9.429919     SYN-4 ## 2: 21.234807 30.522073 30.590687     SYN-4 ## 3:  9.703690  8.319128  9.579323     SYN-4 ## 4: 17.654003 30.891041 29.390515     SYN-4 ## 5:  9.089960  9.744563 12.483508     SYN-4 ## 6: 36.910728 29.551236 29.926378     SYN-4 dat.clust <- ConcatenateClusteringDetails(     tracksom.result = tracksom.result,     dat = dat,     timepoint.col = \"timepoint\",     timepoints = c('Mock', 'SYN-1', 'SYN-2', 'SYN-3', 'SYN-4')     ) head(dat.clust) ##            x         y         z timepoint TrackSOM_cluster ##        <num>     <num>     <num>    <char>            <num> ## 1:  9.598217 11.728198 11.382064      Mock               62 ## 2:  8.937549  8.653750 11.107314      Mock               53 ## 3:  9.632932  9.657278  9.115804      Mock               86 ## 4:  9.770393 12.478038 11.451082      Mock               61 ## 5: 30.426699 31.290929 28.901204      Mock               16 ## 6: 30.789497 30.069909 30.767145      Mock                6 ##    TrackSOM_metacluster TrackSOM_metacluster_lineage_tracking ##                  <fctr>                                <fctr> ## 1:                    2                                     B ## 2:                    2                                     B ## 3:                    2                                     B ## 4:                    2                                     B ## 5:                    1                                     A ## 6:                    1                                     A"},{"path":"https://ghar1821.github.io/TrackSOM/articles/TrackSOM-workflow.html","id":"visualisations","dir":"Articles","previous_headings":"","what":"Visualisations","title":"TrackSOM-workflow","text":"TrackSOM offers 2 visualisation mediums: Network plot. Timeseries heatmap.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/articles/TrackSOM-workflow.html","id":"network-plot","dir":"Articles","previous_headings":"Visualisations","what":"Network plot","title":"TrackSOM-workflow","text":"draw network plots, need call DrawNetworkPlot function. Using clustered tracked data previous sections, following example use function: marker.cols determine markers mean/median expression drawn network plots. need specify markers dataset, just ones want network plots coloured . function won’t preview plots, instead store plots image files extra information (median/mean expression markers) CSV files: example, plots saved PDF files. can changed, e.g. save plots PNG files, specifying desired file format file.format parameter.","code":"DrawNetworkPlot(dat = dat.clust,                 timepoint.col = \"timepoint\",                 timepoints = c('Mock', 'SYN-1', 'SYN-2', 'SYN-3', 'SYN-4'),                 cluster.col = 'TrackSOM_metacluster_lineage_tracking',                 marker.cols = c('x', 'y', 'z')) ## Calculating edges ## Computing node details ## Calculating marker's average per node ## Saving node and edge details ## Start drawing plots ## Warning: Existing variables `x` and `y` overwritten by layout variables ## Drawing plots coloured by time point ## Drawing plots coloured by origin ## Drawing plots coloured by x ## Drawing plots coloured by y ## Drawing plots coloured by z list.files() ## [1] \"network_colBy_origin.pdf\"      \"network_colBy_timepoints.pdf\"  ## [3] \"network_colBy_x.pdf\"           \"network_colBy_y.pdf\"           ## [5] \"network_colBy_z.pdf\"           \"network_plot_edge_details.csv\" ## [7] \"network_plot_node_details.csv\" \"TrackSOM-workflow.Rmd\""},{"path":"https://ghar1821.github.io/TrackSOM/articles/TrackSOM-workflow.html","id":"timeseries-heatmap","dir":"Articles","previous_headings":"Visualisations","what":"Timeseries heatmap","title":"TrackSOM-workflow","text":"draw timeseries heatmap, need call DrawTimeseriesHeatmap function. Using clustered tracked data previous sections, following example use function: marker.cols determine markers mean/median expression drawn network plots. need specify markers dataset, just ones want network plots coloured . function won’t preview plots, instead store plots image files extra information (median/mean expression markers) CSV files: example, plots saved PDF files. can changed, e.g. save plots PNG files, specifying desired file format file.format parameter.","code":"DrawTimeseriesHeatmap(dat = dat.clust,                 timepoint.col = \"timepoint\",                 timepoints = c('Mock', 'SYN-1', 'SYN-2', 'SYN-3', 'SYN-4'),                 cluster.col = 'TrackSOM_metacluster_lineage_tracking',                 marker.cols = c('x', 'y', 'z')) ## Computing node details ## Computing edge details ## Saving node and edge details ## Drawing timeseries heatmap coloured by x ## Drawing timeseries heatmap coloured by y ## Drawing timeseries heatmap coloured by z list.files() ##  [1] \"network_colBy_origin.pdf\"             ##  [2] \"network_colBy_timepoints.pdf\"         ##  [3] \"network_colBy_x.pdf\"                  ##  [4] \"network_colBy_y.pdf\"                  ##  [5] \"network_colBy_z.pdf\"                  ##  [6] \"network_plot_edge_details.csv\"        ##  [7] \"network_plot_node_details.csv\"        ##  [8] \"Timeseries_heatmap_by_x.pdf\"          ##  [9] \"Timeseries_heatmap_by_y.pdf\"          ## [10] \"Timeseries_heatmap_by_z.pdf\"          ## [11] \"timeseries_heatmap_edges_details.csv\" ## [12] \"timeseries_heatmap_node_details.csv\"  ## [13] \"TrackSOM-workflow.Rmd\""},{"path":"https://ghar1821.github.io/TrackSOM/articles/TrackSOM-workflow.html","id":"concluding-remarks","dir":"Articles","previous_headings":"","what":"Concluding remarks","title":"TrackSOM-workflow","text":"pretty much folks! ’re actively updating TrackSOM welcome feedbacks! Thank interest!","code":""},{"path":"https://ghar1821.github.io/TrackSOM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Givanna Putri. Author, maintainer. Davis Edwards. Author. Mark Read. Author.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Putri G, Edwards D, Read M (2024). TrackSOM: Mapping immune response dynamics sequential clustering time- disease-course single-cell cytometry data. R package version 0.1.0, https://ghar1821.github.io/TrackSOM/.","code":"@Manual{,   title = {TrackSOM: Mapping immune response dynamics through sequential clustering of time- and disease-course single-cell cytometry data},   author = {Givanna Putri and Davis Edwards and Mark Read},   year = {2024},   note = {R package version 0.1.0},   url = {https://ghar1821.github.io/TrackSOM/}, }"},{"path":"https://ghar1821.github.io/TrackSOM/index.html","id":"tracksom","dir":"","previous_headings":"","what":"Mapping immune response dynamics through sequential clustering of time- and disease-course single-cell cytometry data","title":"Mapping immune response dynamics through sequential clustering of time- and disease-course single-cell cytometry data","text":"TrackSOM algorithm investigating dynamic immune response evolves time /disease severity. maps temporal development immune response captured sequence cytometry datasets representing points time disease stages. TrackSOM identify immune cell populations (aka phenotypes) data, track evolve dataset sequence. includes branching/splitting common progenitors, appearing disappearing, changing absolute relative phenotypic cell counts, movements marker space signify differentiation /functional changes. TrackSOM includes novel clustering cluster-tracking algorithm, variety visualisation techniques enable interpretation resultant maps.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/index.html","id":"step-by-step-walkthrough","dir":"","previous_headings":"","what":"Step by step walkthrough","title":"Mapping immune response dynamics through sequential clustering of time- and disease-course single-cell cytometry data","text":"sample workflow available ImmuneDynamics website. raw sample workflow files also available doc. available .Rmd, .R, .html format. Approximate run time workflow: 1-2 minutes. sample workflows make use synthetic dataset reported manuscript.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/index.html","id":"system-requirements","dir":"","previous_headings":"","what":"System Requirements","title":"Mapping immune response dynamics through sequential clustering of time- and disease-course single-cell cytometry data","text":"Hardware requirements: Standard computer. TrackSOM tested Macbook >= 8.0GB RAM. OS requirements: MacOS Windows. TrackSOM tested MacOS Big Sur 11.4 Windows 10. R (3.6.0) pdist (1.2) rlist (0.4.6.1) FlowSOM (1.18.0) flowCore (1.52.1) data.table (1.13.6) gtools (3.9.2) tidygraph (1.2.0) ggraph (2.0.5) RColorBrewer (1.1-2) viridis (0.6.1) stringr (1.4.0) igraph (1.2.6) ggplot2 (3.3.5) Biobase (2.46.0)","code":""},{"path":"https://ghar1821.github.io/TrackSOM/index.html","id":"installation-guide","dir":"","previous_headings":"","what":"Installation guide","title":"Mapping immune response dynamics through sequential clustering of time- and disease-course single-cell cytometry data","text":"Installation currently available devtools R package. TrackSOM made available Bioconductor soon. Typical install time < 1 minute. TrackSOM repository captures software protocol , reduce download size users. datasets used manuscript stored Open Science Framework (large GitHub), corresponding evaluation scripts use manuscript available .","code":"install.packages(\"devtools\") devtools::install_github(\"ghar1821/TrackSOM\")"},{"path":"https://ghar1821.github.io/TrackSOM/index.html","id":"manuscript","dir":"","previous_headings":"","what":"Manuscript","title":"Mapping immune response dynamics through sequential clustering of time- and disease-course single-cell cytometry data","text":"Please cite following manuscript find TrackSOM useful research. Givanna H. Putri, Jonathan Chung, Davis N. Edwards, Felix Marsh-Wakefield, Suat Dervish, Irena Koprinska, Nicholas J.C. King, Thomas M. Ashhurst Mark N. Read. (2022). TrackSOM: mapping immune response dynamics sequential clustering time- disease-course single-cell cytometry data. Cytometry ; doi: https://doi.org/10.1002/cyto..24668 citation bibtex format: R scripts reproduce evaluations figures paper introducing TrackSOM algorithm available TrackSOM-evaluations repository.","code":"@article{putri2022tracksom,   title={TrackSOM: Mapping immune response dynamics through clustering of time-course cytometry data},   author={Putri, Givanna H and Chung, Jonathan and Edwards, Davis N and Marsh-Wakefield, Felix and Koprinska, Irena and Dervish, Suat and King, Nicholas JC and Ashhurst, Thomas M and Read, Mark N},   journal={Cytometry Part A},   year={2022},   publisher={Wiley Online Library} }"},{"path":"https://ghar1821.github.io/TrackSOM/index.html","id":"support-and-contribute","dir":"","previous_headings":"","what":"Support and contribute","title":"Mapping immune response dynamics through sequential clustering of time- and disease-course single-cell cytometry data","text":"continuously working improve TrackSOM welcome feedbacks. questions encountered issues using TrackSOM, please post issue ticket.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/index.html","id":"publications-using-tracksom","dir":"","previous_headings":"","what":"Publications using TrackSOM","title":"Mapping immune response dynamics through sequential clustering of time- and disease-course single-cell cytometry data","text":"TrackSOM used analyse COVID-19 temporal data published Cell Reports Medicine journal: Koutsakos, M., Rowntree, L.C., Hensen, L., Chua, B.Y., van de Sandt, C.E., Habel, J.R., Zhang, W., Jia, X., Kedzierski, L., Ashhurst, T.M. Putri, G.H., 2021. Integrated immune dynamics define correlates COVID-19 severity antibody responses. Cell Reports Medicine, p.100208. R scripts reproduce evaluations figures paper available TrackSOM-evaluations repository.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Mapping immune response dynamics through sequential clustering of time- and disease-course single-cell cytometry data","text":"TrackSOM released GPL-3.0 lincense, included .","code":""},{"path":"https://ghar1821.github.io/TrackSOM/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Mapping immune response dynamics through sequential clustering of time- and disease-course single-cell cytometry data","text":"Please note TrackSOM project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/CheckSplits.html","id":null,"dir":"Reference","previous_headings":"","what":"CheckSplits — CheckSplits","title":"CheckSplits — CheckSplits","text":"function check number splits return number splits","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/CheckSplits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CheckSplits — CheckSplits","text":"","code":"CheckSplits(id, id_split_list)"},{"path":"https://ghar1821.github.io/TrackSOM/reference/CheckSplits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CheckSplits — CheckSplits","text":"id meta-cluster id check id_split_list list meta-clusters currently exist","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/CheckSplits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CheckSplits — CheckSplits","text":"number splits meta-cluster","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/ConcatenateClusteringDetails.html","id":null,"dir":"Reference","previous_headings":"","what":"ConcatenateClusteringDetails — ConcatenateClusteringDetails","title":"ConcatenateClusteringDetails — ConcatenateClusteringDetails","text":"Given TrackSOM object DataFrame containing cells time points, extract meta clusters, clusters, tracking id combine cell information.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/ConcatenateClusteringDetails.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ConcatenateClusteringDetails — ConcatenateClusteringDetails","text":"","code":"ConcatenateClusteringDetails(tracksom.result, dat, timepoint.col, timepoints)"},{"path":"https://ghar1821.github.io/TrackSOM/reference/ConcatenateClusteringDetails.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ConcatenateClusteringDetails — ConcatenateClusteringDetails","text":"tracksom.result TrackSOM object generated TrackSOM dat Dataframe containing cells time points divide.Character showing column name dataframe indicate time point cell","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/ConcatenateClusteringDetails.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ConcatenateClusteringDetails — ConcatenateClusteringDetails","text":"Dataframe containing meta cluster, cluster, tracking ids   cells","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/ConcatenateClusteringDetails.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ConcatenateClusteringDetails — ConcatenateClusteringDetails","text":"","code":"library(data.table) data_files <- sapply(c(0:4), function(i) {   system.file(\"extdata\", paste0(\"synthetic_d\", i, \".fcs\"), package=\"TrackSOM\") }) use_cols <- c(\"x\", \"y\", \"z\") tracksom_result <- TrackSOM(inputFiles = data_files,                             colsToUse = use_cols,                             nClus = 10,                             dataFileType = \".fcs\" ) #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d0.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d1.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d2.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d3.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d4.fcs #> Building SOM #> Mapping data to SOM #> Building MST #> Extracting SOM nodes for each time point #> Running meta clustering #> Meta clustering time point 1 with 83 SOM nodes #> Meta clustering time point 2 with 90 SOM nodes #> Meta clustering time point 3 with 93 SOM nodes #> Meta clustering time point 4 with 95 SOM nodes #> Meta clustering time point 5 with 93 SOM nodes  data <- lapply(c(0:4), function(i) {   fread(system.file(\"extdata\", paste0(\"synthetic_d\", i, \".csv\"), package=\"TrackSOM\")) }) data <- rbindlist(data) tracksom_res <- ConcatenateClusteringDetails(   tracksom.result = tracksom_result,   dat = data,   timepoint.col = 'timepoint',   timepoints = c(\"Mock\", \"SYN-1\", \"SYN-2\", \"SYN-3\", \"SYN-4\") )"},{"path":"https://ghar1821.github.io/TrackSOM/reference/DrawNetworkPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"DrawNetworkPlot — DrawNetworkPlot","title":"DrawNetworkPlot — DrawNetworkPlot","text":"Draw TrackSOM network plot node represents meta-cluster, coloured time-point exists median/mean marker values. Meta-clusters connected edges, indicating transition time.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/DrawNetworkPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DrawNetworkPlot — DrawNetworkPlot","text":"","code":"DrawNetworkPlot(dat, timepoint.col, timepoints, cluster.col,  marker.cols)"},{"path":"https://ghar1821.github.io/TrackSOM/reference/DrawNetworkPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DrawNetworkPlot — DrawNetworkPlot","text":"dat Data table. dataset timepoint.col Column denoting time point column timepoints Vector time-points cluster.col Column denoting TrackSOM meta-cluster ID marker.cols Columns denoting markers plot calculation.type aggregation (mean/median) type colouring nodes node.size Whether nodes sized based proportion cells captured ('auto') just constant (number denoting node size) min.node.size Smallest node size. used node.size 'auto' max.node.size Largest node size. used node.size 'auto' arrow.length Length arrow arrow.head.gap Gap node head arrow standard.colours Colour scheme colouring nodes. Can either one colours specified viridis package https://cran.r-project.org/web/packages/viridis/vignettes/intro--viridis.html spectral, bupu, rdylbu. img.height Height image network plot export img.width Width image network plot export load.temp.data Whether load intermediate calculations . intermediate files contain details node edge, produced function first run. mapping data.table containing annotation (cellular population) meta-cluster time-point represents. data.table must contain column meta-cluster ID column named per cluster.col, time-point column named per timepoint.col, cell population column named per population.col. population.col Column denoting cell population name column. used mapping NULL. graph.layout layout network plot. anything ggraph, graphlayouts, igraph packages. legend.position Position legend, per ggplot2. no_merge Whether meta-cluster merging allowed. affect network plot coloured meta-cluster origin. merging permitted, merged meta-clusters coloured grey. merging permitted, split meta-clusters coloured parent. file.format Image export file format line.width Width edge","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/DrawNetworkPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DrawNetworkPlot — DrawNetworkPlot","text":"","code":"library(data.table) data_files <- sapply(c(0:4), function(i) {   system.file(\"extdata\", paste0(\"synthetic_d\", i, \".fcs\"), package=\"TrackSOM\") }) use_cols <- c(\"x\", \"y\", \"z\") tracksom_result <- TrackSOM(inputFiles = data_files,                             colsToUse = use_cols,                             nClus = 10,                             dataFileType = \".fcs\" ) #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d0.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d1.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d2.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d3.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d4.fcs #> Building SOM #> Mapping data to SOM #> Building MST #> Extracting SOM nodes for each time point #> Running meta clustering #> Meta clustering time point 1 with 83 SOM nodes #> Meta clustering time point 2 with 90 SOM nodes #> Meta clustering time point 3 with 93 SOM nodes #> Meta clustering time point 4 with 95 SOM nodes #> Meta clustering time point 5 with 93 SOM nodes  data <- lapply(c(0:4), function(i) {   fread(system.file(\"extdata\", paste0(\"synthetic_d\", i, \".csv\"), package=\"TrackSOM\")) }) data <- rbindlist(data) tracksom_res <- ConcatenateClusteringDetails(   dat = data,   tracksom.result = tracksom_result,   timepoint.col = 'timepoint',   timepoints = c(\"Mock\", \"SYN-1\", \"SYN-2\", \"SYN-3\", \"SYN-4\") ) DrawNetworkPlot(tracksom_res,                 'timepoint',                 c(\"Mock\", \"SYN-1\", \"SYN-2\", \"SYN-3\", \"SYN-4\"),                 \"TrackSOM_metacluster_lineage_tracking\",                 use_cols) #> Calculating edges #> Computing node details #> Calculating marker's average per node #> Saving node and edge details #> Start drawing plots #> Warning: Existing variables `x` and `y` overwritten by layout variables #> Drawing plots coloured by time point #> Drawing plots coloured by origin #> Drawing plots coloured by x #> Drawing plots coloured by y #> Drawing plots coloured by z"},{"path":"https://ghar1821.github.io/TrackSOM/reference/DrawTimeseriesHeatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"DrawTimeseriesHeatmap — DrawTimeseriesHeatmap","title":"DrawTimeseriesHeatmap — DrawTimeseriesHeatmap","text":"Draw TrackSOM network plot node represents meta-cluster, coloured time-point exists median/mean marker values. Meta-clusters connected edges, indicating transition time.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/DrawTimeseriesHeatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DrawTimeseriesHeatmap — DrawTimeseriesHeatmap","text":"","code":"DrawTimeseriesHeatmap(dat, timepoint.col, timepoints, cluster.col,  marker.cols)"},{"path":"https://ghar1821.github.io/TrackSOM/reference/DrawTimeseriesHeatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DrawTimeseriesHeatmap — DrawTimeseriesHeatmap","text":"dat Data table. dataset timepoints Vector time-points timepoint.col Column denoting time point column cluster.col Column denoting TrackSOM meta-cluster ID marker.cols Columns denoting markers plot colours Colour scheme colouring nodes. Can either one colours specified viridis package https://cran.r-project.org/web/packages/viridis/vignettes/intro--viridis.html spectral, bupu, rdylbu. plot.width Width image network plot export plot.height Height image network plot export font.size Size font file.format Image export file format min.node.size Smallest node size. used node.size 'auto' max.node.size Largest node size. used node.size 'auto' legend.position Position legend, per ggplot2. load.temp.data Whether load intermediate calculations . intermediate files contain details node edge, produced function first run. arrow.length Length arrow mapping data.table containing annotation (cellular population) meta-cluster time-point represents. data.table must contain column meta-cluster ID column named per cluster.col, time-point column named per timepoint.col, cell population column named per population.col. population.col Column denoting cell population name column. used mapping NULL. cluster.ordering custom ordering meta-clusters (y-axis) map.cluster.id Whether map meta-cluster ID numeric. Handy meta-cluster IDs get long. calculation.type aggregation (mean/median) type colouring nodes line.width Width edge node.size Whether nodes sized based proportion cells captured ('auto') just constant (number denoting node size) arrow.head.gap Gap node head arrow no_merge Whether meta-cluster merging allowed. affect network plot coloured meta-cluster origin. merging permitted, merged meta-clusters coloured grey. merging permitted, split meta-clusters coloured parent.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/DrawTimeseriesHeatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"DrawTimeseriesHeatmap — DrawTimeseriesHeatmap","text":"","code":"library(data.table) data_files <- sapply(c(0:4), function(i) {   system.file(\"extdata\", paste0(\"synthetic_d\", i, \".fcs\"), package=\"TrackSOM\") }) use_cols <- c(\"x\", \"y\", \"z\") tracksom_result <- TrackSOM(inputFiles = data_files,                             colsToUse = use_cols,                             nClus = 10,                             dataFileType = \".fcs\" ) #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d0.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d1.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d2.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d3.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d4.fcs #> Building SOM #> Mapping data to SOM #> Building MST #> Extracting SOM nodes for each time point #> Running meta clustering #> Meta clustering time point 1 with 83 SOM nodes #> Meta clustering time point 2 with 90 SOM nodes #> Meta clustering time point 3 with 93 SOM nodes #> Meta clustering time point 4 with 95 SOM nodes #> Meta clustering time point 5 with 93 SOM nodes  data <- lapply(c(0:4), function(i) {   fread(system.file(\"extdata\", paste0(\"synthetic_d\", i, \".csv\"), package=\"TrackSOM\")) }) data <- rbindlist(data) tracksom_res <- ConcatenateClusteringDetails(   dat = data,   tracksom.result = tracksom_result,   timepoint.col = 'timepoint',   timepoints = c(\"Mock\", \"SYN-1\", \"SYN-2\", \"SYN-3\", \"SYN-4\") ) DrawTimeseriesHeatmap(dat = tracksom_res,                       timepoint.col = 'timepoint',                       timepoints = c(\"Mock\", \"SYN-1\", \"SYN-2\", \"SYN-3\", \"SYN-4\"),                       cluster.col = \"TrackSOM_metacluster_lineage_tracking\",                       marker.cols = use_cols) #> Computing node details #> Computing edge details #> Saving node and edge details #> Drawing timeseries heatmap coloured by x #> Drawing timeseries heatmap coloured by y #> Drawing timeseries heatmap coloured by z"},{"path":"https://ghar1821.github.io/TrackSOM/reference/ExportClusteringDetailsOnly.html","id":null,"dir":"Reference","previous_headings":"","what":"ExportClusteringDetailsOnly — ExportClusteringDetailsOnly","title":"ExportClusteringDetailsOnly — ExportClusteringDetailsOnly","text":"Given TrackSOM object export clustering result data.table.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/ExportClusteringDetailsOnly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ExportClusteringDetailsOnly — ExportClusteringDetailsOnly","text":"","code":"ExportClusteringDetailsOnly(tracksom.result)"},{"path":"https://ghar1821.github.io/TrackSOM/reference/ExportClusteringDetailsOnly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ExportClusteringDetailsOnly — ExportClusteringDetailsOnly","text":"tracksom.result TrackSOM object generated TrackSOM","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/ExportClusteringDetailsOnly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ExportClusteringDetailsOnly — ExportClusteringDetailsOnly","text":"Data.table containing meta cluster, cluster, tracking ids   cells","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/ExportClusteringDetailsOnly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ExportClusteringDetailsOnly — ExportClusteringDetailsOnly","text":"","code":"data_files <- sapply(c(0:4), function(i) { system.file(\"extdata\", paste0(\"synthetic_d\", i, \".fcs\"), package=\"TrackSOM\") }) use_cols <- c(\"x\", \"y\", \"z\") tracksom_result <- TrackSOM(inputFiles = data_files,                             colsToUse = use_cols,                             nClus = 10,                             dataFileType = \".fcs\" ) #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d0.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d1.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d2.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d3.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d4.fcs #> Building SOM #> Mapping data to SOM #> Building MST #> Extracting SOM nodes for each time point #> Running meta clustering #> Meta clustering time point 1 with 83 SOM nodes #> Meta clustering time point 2 with 90 SOM nodes #> Meta clustering time point 3 with 93 SOM nodes #> Meta clustering time point 4 with 95 SOM nodes #> Meta clustering time point 5 with 93 SOM nodes tracksom_res <- ExportClusteringDetailsOnly(tracksom_result)"},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetClusterOrigins.html","id":null,"dir":"Reference","previous_headings":"","what":"GetClusterOrigins — GetClusterOrigins","title":"GetClusterOrigins — GetClusterOrigins","text":"Function infer origins meta-cluster","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetClusterOrigins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GetClusterOrigins — GetClusterOrigins","text":"","code":"GetClusterOrigins(node.dat, no_merge)"},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetClusterOrigins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GetClusterOrigins — GetClusterOrigins","text":"node.dat data.table containing nodes details no_merge whether meta-cluster merging enabled ","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetClusterOrigins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GetClusterOrigins — GetClusterOrigins","text":"vector meta-cluster origins","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetClusterProportions.html","id":null,"dir":"Reference","previous_headings":"","what":"GetClusterProportions — GetClusterProportions","title":"GetClusterProportions — GetClusterProportions","text":"Function count proportin cells meta-cluster","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetClusterProportions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GetClusterProportions — GetClusterProportions","text":"","code":"GetClusterProportions(node.dat, dat, timepoint.col, timepoints, cluster.col)"},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetClusterProportions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GetClusterProportions — GetClusterProportions","text":"node.dat data.table containing node details dat raw clustered tracked data timepoint.col name column denoting time-point timepoints vector time-points available data cluster.col name column denoting meta-cluster ID","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetClusterProportions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GetClusterProportions — GetClusterProportions","text":"vector meta-clusters' proportion","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetColourPallete.html","id":null,"dir":"Reference","previous_headings":"","what":"GetColourPallete — GetColourPallete","title":"GetColourPallete — GetColourPallete","text":"Function get colour pallete network plot's nodes","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetColourPallete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GetColourPallete — GetColourPallete","text":"","code":"GetColourPallete(standard.colours, n.col = 50, factor = NULL)"},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetColourPallete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GetColourPallete — GetColourPallete","text":"standard.colours colour scheme n.col number colours get factor discrete values colour","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetColourPallete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GetColourPallete — GetColourPallete","text":"colour mapping","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetFirstID.html","id":null,"dir":"Reference","previous_headings":"","what":"GetFirstID — GetFirstID","title":"GetFirstID — GetFirstID","text":"Function obtains IDs first time point tracking.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetFirstID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GetFirstID — GetFirstID","text":"","code":"GetFirstID(mc, mcPerCell)"},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetFirstID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GetFirstID — GetFirstID","text":"mc meta-cluster ID node mcPerCell metaclustering per datapoint","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetFirstID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GetFirstID — GetFirstID","text":"list containing three elements:  1) new_ids: new IDs  2) n: new number used input GetNewID function  3) iter: new iteration used unput GetNewID function","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetGeomPoint.html","id":null,"dir":"Reference","previous_headings":"","what":"GetGeomPoint — GetGeomPoint","title":"GetGeomPoint — GetGeomPoint","text":"Function get node object ","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetGeomPoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GetGeomPoint — GetGeomPoint","text":"","code":"GetGeomPoint(node.size, col.by)"},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetGeomPoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GetGeomPoint — GetGeomPoint","text":"node.size whether nodes sized based proportion cells meta-clusters constant number col.colour node based ","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetGeomPoint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GetGeomPoint — GetGeomPoint","text":"geom node point object","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetNewID.html","id":null,"dir":"Reference","previous_headings":"","what":"GetNewID — GetNewID","title":"GetNewID — GetNewID","text":"Function gets new ID given number alphabet next iteration alphabet.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetNewID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GetNewID — GetNewID","text":"","code":"GetNewID(number, iteration)"},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetNewID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GetNewID — GetNewID","text":"number current number letters already issued. iteration current iteration, .e. number times letter repeated (AA iteration = 2)","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetNewID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GetNewID — GetNewID","text":"list containing three elements:   1) new_id: new ID   2) n: new number used input next GetNewID function   3) iter: new iteration used input next GetNewID function","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetNodesPerCluster.html","id":null,"dir":"Reference","previous_headings":"","what":"GetNodesPerCluster — GetNodesPerCluster","title":"GetNodesPerCluster — GetNodesPerCluster","text":"Function generates list nodes metacluster, used generate data matrix tracking.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetNodesPerCluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GetNodesPerCluster — GetNodesPerCluster","text":"","code":"GetNodesPerCluster(mc)"},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetNodesPerCluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GetNodesPerCluster — GetNodesPerCluster","text":"mc factor meta-cluster per node","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetNodesPerCluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GetNodesPerCluster — GetNodesPerCluster","text":"list node IDs metacluster ID","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetTransitionsAsEdges.html","id":null,"dir":"Reference","previous_headings":"","what":"GetTransitionsAsEdges — GetTransitionsAsEdges","title":"GetTransitionsAsEdges — GetTransitionsAsEdges","text":"Given TrackSOM clustering tracking, descramble meta-cluster ID. Handy work meta-cluster transitions.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetTransitionsAsEdges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GetTransitionsAsEdges — GetTransitionsAsEdges","text":"","code":"GetTransitionsAsEdges(dat, timepoints, timepoint_col, cluster_col)"},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetTransitionsAsEdges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GetTransitionsAsEdges — GetTransitionsAsEdges","text":"dat Data.table storing clustered gated dataset timepoints Vector containing time points order timepoint_col Character Column denoting time points dat cluster_col Character Column denoting cluster id produced tracking lineage determination dat","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/GetTransitionsAsEdges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GetTransitionsAsEdges — GetTransitionsAsEdges","text":"","code":"library(data.table) data_files <- sapply(c(0:4), function(i) {   system.file(\"extdata\", paste0(\"synthetic_d\", i, \".fcs\"), package=\"TrackSOM\") }) use_cols <- c(\"x\", \"y\", \"z\") tracksom_result <- TrackSOM(inputFiles = data_files,                             colsToUse = use_cols,                             nClus = 10,                             dataFileType = \".fcs\" ) #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d0.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d1.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d2.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d3.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d4.fcs #> Building SOM #> Mapping data to SOM #> Building MST #> Extracting SOM nodes for each time point #> Running meta clustering #> Meta clustering time point 1 with 83 SOM nodes #> Meta clustering time point 2 with 90 SOM nodes #> Meta clustering time point 3 with 93 SOM nodes #> Meta clustering time point 4 with 95 SOM nodes #> Meta clustering time point 5 with 93 SOM nodes  data <- lapply(c(0:4), function(i) {   fread(system.file(\"extdata\", paste0(\"synthetic_d\", i, \".csv\"), package=\"TrackSOM\")) }) data <- rbindlist(data) tracksom_res <- ConcatenateClusteringDetails(   dat = data,   tracksom.result = tracksom_result,   timepoint.col = 'timepoint',   timepoints = c(\"Mock\", \"SYN-1\", \"SYN-2\", \"SYN-3\", \"SYN-4\") ) GetTransitionsAsEdges(dat = tracksom_res,                       timepoint_col = 'timepoint',                       timepoints = c(\"Mock\", \"SYN-1\", \"SYN-2\", \"SYN-3\", \"SYN-4\"),                       cluster_col = \"TrackSOM_metacluster_lineage_tracking\") #>                                           from #> 1                                          1_C #> 2                                          1_J #> 3                                          1_G #> 4                                          1_B #> 5                                          1_A #> 6                                          1_G #> 7                                          1_B #> 8                                          1_E #> 9                                          1_D #> 10                                         1_E #> 11                                         1_H #> 12                                         1_F #> 13                                         1_C #> 14                                         1_E #> 15                                         1_H #> 16                                         1_G #> 17                                     2_(D,E) #> 18                                       2_E|1 #> 19                                       2_E|1 #> 20                                 2_(G|2,H|1) #> 21                               2_(A,B|1,G|1) #> 22                                       2_C|1 #> 23                                       2_C|1 #> 24                               2_(A,B|1,G|1) #> 25                                     2_(B,G) #> 26                                     2_(F,H) #> 27                                         2_J #> 28                                         2_J #> 29                                     3_(D,E) #> 30                                       3_E|1 #> 31                                       3_E|1 #> 32                                         3_K #> 33                                         3_L #> 34                                       3_J|1 #> 35                                       3_J|1 #> 36                     3_((A,B|1,G|1)|1,(B,G)) #> 37                         3_((A,B|1,G|1),C|1) #> 38                                 3_((F,H),J) #> 39                                         3_M #> 40                         3_((A,B|1,G|1),C|1) #> 41                                 3_(G|2,H|1) #> 42                         3_((A,B|1,G|1),C|1) #> 43                                 3_(G|2,H|1) #> 44                                     4_(D,E) #> 45                                       4_E|1 #> 46                                       4_E|1 #> 47 4_(((A,B|1,G|1),C|1),((A,B|1,G|1)|1,(B,G))) #> 48                             4_(((F,H),J),M) #> 49           4_(((A,B|1,G|1),C|1)|1,(G|2,H|1)) #> 50                       4_((A,B|1,G|1),C|1)|2 #> 51                               4_(G|2,H|1)|1 #> 52                             4_(((F,H),J),M) #> 53                                       4_J|1 #> 54                                       4_J|1 #> 55           4_(((A,B|1,G|1),C|1)|1,(G|2,H|1)) #>                                             to #> 1                                          2_C #> 2                                          2_J #> 3                                2_(A,B|1,G|1) #> 4                                2_(A,B|1,G|1) #> 5                                2_(A,B|1,G|1) #> 6                                      2_(B,G) #> 7                                      2_(B,G) #> 8                                      2_(D,E) #> 9                                      2_(D,E) #> 10                                       2_E|1 #> 11                                     2_(F,H) #> 12                                     2_(F,H) #> 13                                       2_C|1 #> 14                                       2_E|2 #> 15                                 2_(G|2,H|1) #> 16                                 2_(G|2,H|1) #> 17                                     3_(D,E) #> 18                                       3_E|1 #> 19                                       3_E|1 #> 20                                 3_(G|2,H|1) #> 21                         3_((A,B|1,G|1),C|1) #> 22                         3_((A,B|1,G|1),C|1) #> 23                         3_((A,B|1,G|1),C|1) #> 24                     3_((A,B|1,G|1)|1,(B,G)) #> 25                     3_((A,B|1,G|1)|1,(B,G)) #> 26                                 3_((F,H),J) #> 27                                 3_((F,H),J) #> 28                                       3_J|1 #> 29                                     4_(D,E) #> 30                                       4_E|1 #> 31                                       4_E|1 #> 32                                         4_K #> 33                                         4_L #> 34                                       4_J|1 #> 35                                       4_J|1 #> 36 4_(((A,B|1,G|1),C|1),((A,B|1,G|1)|1,(B,G))) #> 37 4_(((A,B|1,G|1),C|1),((A,B|1,G|1)|1,(B,G))) #> 38                             4_(((F,H),J),M) #> 39                             4_(((F,H),J),M) #> 40           4_(((A,B|1,G|1),C|1)|1,(G|2,H|1)) #> 41           4_(((A,B|1,G|1),C|1)|1,(G|2,H|1)) #> 42                       4_((A,B|1,G|1),C|1)|2 #> 43                               4_(G|2,H|1)|1 #> 44                                     5_(D,E) #> 45                                       5_E|1 #> 46                                       5_E|1 #> 47 5_(((A,B|1,G|1),C|1),((A,B|1,G|1)|1,(B,G))) #> 48                             5_(((F,H),J),M) #> 49           5_(((A,B|1,G|1),C|1)|1,(G|2,H|1)) #> 50                       5_((A,B|1,G|1),C|1)|2 #> 51                               5_(G|2,H|1)|1 #> 52                     5_((((F,H),J),M)|1,J|1) #> 53                     5_((((F,H),J),M)|1,J|1) #> 54                     5_((((F,H),J),M)|1,J|1) #> 55         5_(((A,B|1,G|1),C|1)|1,(G|2,H|1))|1"},{"path":"https://ghar1821.github.io/TrackSOM/reference/ParseInput.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 ParseInput function — ParseInput","title":"S3 ParseInput function — ParseInput","text":"Internal Function. Convert input data FlowSOM object ready processed. Many parameters used FlowSOM's ReadInput function. description parameters taken FlowSOM.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/ParseInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 ParseInput function — ParseInput","text":"","code":"ParseInput(   inputFiles,   compensate,   spillover,   transform,   toTransform,   transformFunction,   scale,   scaled.center,   scaled.scale,   silent,   colsToUse,   ... )  # S3 method for class 'character' ParseInput(   inputFiles,   compensate,   spillover,   transform,   toTransform,   transformFunction,   scale,   scaled.center,   scaled.scale,   silent,   colsToUse,   ... )  # S3 method for class 'list' ParseInput(   inputFiles,   compensate,   spillover,   transform,   toTransform,   transformFunction,   scale,   scaled.center,   scaled.scale,   silent,   colsToUse,   ... )  # S3 method for class 'data.table' ParseInput(   inputFiles,   compensate,   spillover,   transform,   toTransform,   transformFunction,   scale,   scaled.center,   scaled.scale,   silent,   colsToUse,   timepointCol,   timepoints )"},{"path":"https://ghar1821.github.io/TrackSOM/reference/ParseInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 ParseInput function — ParseInput","text":"inputFiles list containing input data compensate Whether run data compensation spillover spillover matrix compensate transform Whether run data transformation toTransform column names indices transform transformFunction transform function run scale Whether scale data silent Whether show progress updates ... Additional arguments used inputFiles data.table object timepointCol character denoting column data.frame corresponds time-point cell belongs timepoints vector time-points. scale.center See base::scale scale.scale See base::scale colToUse column used TrackSOM","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/ParseInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 ParseInput function — ParseInput","text":"FlowSOM object","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/ParseInput.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"S3 ParseInput function — ParseInput","text":"ParseInput(character): Process vector characters input ParseInput(list): Process list data.frames input ParseInput(data.table): Process data.table input","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/TrackSOM.html","id":null,"dir":"Reference","previous_headings":"","what":"TrackSOM — TrackSOM","title":"TrackSOM — TrackSOM","text":"Run TrackSOM algorithm. run Tracking default merging allowed.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/TrackSOM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TrackSOM — TrackSOM","text":"","code":"TrackSOM (inputFiles, colsToUse, maxMeta, ...)"},{"path":"https://ghar1821.github.io/TrackSOM/reference/TrackSOM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TrackSOM — TrackSOM","text":"inputFiles DEFAULT. Either vector filenames list `data.table` objects `data.table` object. vector, element correspond file belonging timepoint. list, element correspond `data.table` object belonging timepoint. `data.table` object, make sure `timepoints` `timepointCol` NULL. Make sure vector list ordered 1st element corresponds 1st time-point, 2nd element corresponds 2nd time-point, etc. colsToUse DEFAULT. Vector column names used train SOM. One list must time periods. timepoints DEFAULT NULL. vector time-points order. used inputFiles `data.table` object timepointCol DEFAULT NULL. character denoting column inputFile corresponds time-point cell belongs . used inputFiles `data.table` object tracking DEFAULT TRUE. Whether track cluster changes (TRUE), just cluster (NULL). noMerge DEFAULT FALSE. Whether allow meta-cluster merging (FALSE) (TRUE). maxMeta DEFAULT NULL. Numeric. Maximum number meta clusters time point. TrackSOM use limit number meta clusters allowed given freedom decide optimum number meta clusters. nClus DEFAULT NULL. Numeric Vector numbers. single number, TrackSOM produce number meta clusters per time point. Otherwise, use entries vector. Number meta clusters must least 3 time point. seed DEFAULT 42. Random seed number. xdim DEFAULT 10. SOM grid size. ydim DEFAULT 10. SOM grid size. ... parameters FlowSOM functions ReadInput, BuildSOM BuildMST. See FlowSOM vignette specific parameter information","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/TrackSOM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TrackSOM — TrackSOM","text":"list containing following elements: 1) FlowSOM: list similar output FlowSOM function. 2) Metaclustering: list two lists:   2.1) Metaclustering: contains clustering levels node grid   time step.   2.2) mcPerCell: contains clusering levels datapoint   time step. 3) Tracking: list containing unique IDs determined tracking function time step","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/TrackSOM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TrackSOM — TrackSOM","text":"","code":"data_files <- sapply(c(0:4), function(i) { system.file(\"extdata\", paste0(\"synthetic_d\", i, \".fcs\"), package=\"TrackSOM\") }) use_cols <- c(\"x\", \"y\", \"z\") tracksom_result <- TrackSOM(inputFiles = data_files,                             colsToUse = use_cols,                             nClus = 10,                             dataFileType = \".fcs\" ) #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d0.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d1.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d2.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d3.fcs #> Reading file /home/runner/work/_temp/Library/TrackSOM/extdata/synthetic_d4.fcs #> Building SOM #> Mapping data to SOM #> Building MST #> Extracting SOM nodes for each time point #> Running meta clustering #> Meta clustering time point 1 with 83 SOM nodes #> Meta clustering time point 2 with 90 SOM nodes #> Meta clustering time point 3 with 93 SOM nodes #> Meta clustering time point 4 with 95 SOM nodes #> Meta clustering time point 5 with 93 SOM nodes tracksom_res <- ExportClusteringDetailsOnly(tracksom_result)"},{"path":"https://ghar1821.github.io/TrackSOM/reference/TrackingNoMerging.html","id":null,"dir":"Reference","previous_headings":"","what":"TrackingNoMerging — TrackingNoMerging","title":"TrackingNoMerging — TrackingNoMerging","text":"Perform tracking meta-clusters merging allowed. Need run FlowSOM's BuildSOM contorts SOM grid MetaClustering perform meta-cluster SOM node.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/TrackingNoMerging.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TrackingNoMerging — TrackingNoMerging","text":"","code":"TrackingNoMerging(fsom)"},{"path":"https://ghar1821.github.io/TrackSOM/reference/TrackingNoMerging.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TrackingNoMerging — TrackingNoMerging","text":"fsom list containing FlowSOM object meta-clustering lists.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/TrackingNoMerging.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TrackingNoMerging — TrackingNoMerging","text":"list containing N lists unique IDs determined lineage,   N . time steps.","code":""},{"path":[]},{"path":"https://ghar1821.github.io/TrackSOM/reference/TrackingWithMerging.html","id":null,"dir":"Reference","previous_headings":"","what":"TrackingWithMerging — TrackingWithMerging","title":"TrackingWithMerging — TrackingWithMerging","text":"Perform tracking meta-clusters merging allowed. Need run FlowSOM's BuildSOM contorts SOM grid MetaClustering perform meta-cluster SOM node.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/TrackingWithMerging.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TrackingWithMerging — TrackingWithMerging","text":"","code":"TrackingWithMerging(fsom)"},{"path":"https://ghar1821.github.io/TrackSOM/reference/TrackingWithMerging.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TrackingWithMerging — TrackingWithMerging","text":"fsom list containing FlowSOM object meta-clustering lists.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/TrackingWithMerging.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TrackingWithMerging — TrackingWithMerging","text":"list containing N lists unique IDs determined lineage,   N . time steps.","code":""},{"path":[]},{"path":"https://ghar1821.github.io/TrackSOM/reference/clustWithNAs.html","id":null,"dir":"Reference","previous_headings":"","what":"clustWithNAs — clustWithNAs","title":"clustWithNAs — clustWithNAs","text":"Function used tease apart meta-clustering result SOM nodes.","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/clustWithNAs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clustWithNAs — clustWithNAs","text":"","code":"clustWithNAs(values, mcs)"},{"path":"https://ghar1821.github.io/TrackSOM/reference/clustWithNAs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"clustWithNAs — clustWithNAs","text":"values list SOM nodes mcs list meta-clusters","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/clustWithNAs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"clustWithNAs — clustWithNAs","text":"updated list SOM nodes","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/create_flowframe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create flowframe — create_flowframe","title":"Create flowframe — create_flowframe","text":"Create flowframe","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/create_flowframe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create flowframe — create_flowframe","text":"","code":"create_flowframe(input_dat, colsToUse)"},{"path":"https://ghar1821.github.io/TrackSOM/reference/create_flowframe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create flowframe — create_flowframe","text":"input_dat data.table colsToUse vector columns isolate input_dat","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/create_flowframe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create flowframe — create_flowframe","text":"flowFrame object","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/get_idx_pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Get pipe character — get_idx_pipe","title":"Get pipe character — get_idx_pipe","text":"Helper method detect pipe character meta-cluster ID","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/get_idx_pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get pipe character — get_idx_pipe","text":"","code":"get_idx_pipe(cl)"},{"path":"https://ghar1821.github.io/TrackSOM/reference/get_idx_pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get pipe character — get_idx_pipe","text":"cl Character cluster ID","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/get_idx_roundclsbracket.html","id":null,"dir":"Reference","previous_headings":"","what":"Get round bracket — get_idx_roundclsbracket","title":"Get round bracket — get_idx_roundclsbracket","text":"Helper method find round brackets meta-cluster ID","code":""},{"path":"https://ghar1821.github.io/TrackSOM/reference/get_idx_roundclsbracket.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get round bracket — get_idx_roundclsbracket","text":"","code":"get_idx_roundclsbracket(cl)"},{"path":"https://ghar1821.github.io/TrackSOM/reference/get_idx_roundclsbracket.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get round bracket — get_idx_roundclsbracket","text":"cl Character cluster ID","code":""}]
